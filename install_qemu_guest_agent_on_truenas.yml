- name: Change host variable
  hosts: localhost
  connection: local
  tasks:
    - name: Use hostname from env var working_host
      ansible.builtin.add_host:
        name: "{{ working_host }}"
        groups: working_group
  tags:
    - always


- name: TrueNAS QEMU Guest Agent Setup
  hosts: working_group
  gather_facts: true
  remote_user: root
  vars:
    # ansible_python_interpreter: /usr/bin/python
    ansible_ssh_port: 22
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
    freebsd13_kernel: "http://ftp-archive.freebsd.org/pub/FreeBSD-Archive/old-releases/amd64/13.1-RELEASE/kernel.txz"
    freebsd13_qga_pkg: "https://pkg.freebsd.org/FreeBSD:13:amd64/latest/All/qemu-guest-agent-9.1.1.pkg"
    qga_backup_dir: "/root/qga_backup"

  tasks:
    - name: Download FreeBSD 13.1 kernel.txz to /tmp
      ansible.builtin.get_url:
        url: "{{ freebsd13_kernel }}"
        dest: /tmp/kernel.txz
        mode: '0644'
      register: fetch_kernel
      failed_when: fetch_kernel is failed
      tags: 
        - fetch_kernel

    - name: Extract kernel.txz to /tmp
      ansible.builtin.shell: |
        tar -xf /tmp/kernel.txz --strip-components=3 -C /boot/modules/ ./boot/kernel/virtio_console.ko
      register: extract_kernel
      failed_when: extract_kernel is failed
      tags: 
        - extract_kernel

    - name: Load VirtIO Console driver
      ansible.builtin.shell: |
        kldload /boot/modules/virtio_console.ko
      register: load_kernel
      failed_when: load_kernel is failed
      tags: 
        - load_kernel

    - name: Download and Install downloaded FreeBSD 13 QEMU Guest Agent package
      ansible.builtin.shell: |
        IGNORE_OSVERSION=yes pkg add {{ freebsd13_qga_pkg }}
      args:
        executable: /bin/bash
      register: install_qga
      failed_when: install_qga is failed
      tags: 
        - install_qga

    - name: Create backup of qemu-guest-agent file
      ansible.builtin.shell: |
        mkdir {{ qga_backup_dir }}
        cp /usr/local/etc/rc.d/qemu-guest-agent {{ qga_backup_dir }}/qemu-guest-agent
      args:
        executable: /bin/bash
      register: backup_qga
      failed_when: backup_qga is failed
      tags: 
        - backup_qga

    - name: Create Tunables for QEMU Guest Agent
      ansible.builtin.shell: |
        cli <<EOF
          system tunable create type=RC var="qemu_guest_agent_enable" value="YES" enabled=true
          system tunable create type=RC var="qemu_guest_agent_flags" value="-d -v -l /var/log/qemu-ga.log" enabled=true
          system tunable create type=LOADER var="virtio_console_load" value="YES" enabled=true
        EOF
      args:
        executable: /bin/bash
      register: create_tunables
      failed_when: create_tunables is failed
      tags: 
        - create_tunables

    - name: Set un init/shutdown Scripts
      ansible.builtin.shell: |
        cli << EOF
            system initshutdownscript create type=COMMAND command="service qemu-guest-agent start" when=POSTINIT enabled=true timeout=10 comment="start qemu-guest-agent on boot"
            system initshutdownscript create type=COMMAND command="cp {{ qga_backup_dir }}/qemu-guest-agent /usr/local/etc/rc.d" when=PREINIT enabled=true timeout=10 comment="copy qemu-guest-agent on boot"
        EOF
      args:
        executable: /bin/bash
      register: create_scripts
      failed_when: create_scripts is failed
      tags: 
        - create_scripts

    - name: Print message
      ansible.builtin.debug:
        msg: "Please reboot TrueNAS to apply changes."
      tags: 
        - reboot_message
